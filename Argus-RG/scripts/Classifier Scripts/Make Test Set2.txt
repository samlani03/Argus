#add times here for test set
vecofstarts= c(3015.22, 3032.25)
#c(3020.05, 3019.15, 3017.87, 3015.22, 3032.25) 
#3033.06, 3037.33)
#c(3037.33, 3036.02, 3030.73, 3033.46, 3033.93, 3034.41, #3016.43, 3038.42, 3028.82)
starttimesvec=vecofstarts
starttimesvec<-cbind(starttimesvec,0)
require(gWidgets)
options("guiToolkit"="RGtk2")
require(RGtk2)
tracker=gedit('RFT')
textwindow<-ggroup(horizontal=FALSE,use.scrollwindow = TRUE, container=TRUE) #cont used to be mainwindow2
size(textwindow)<-c(500,100)
glabel('Command History',container=textwindow)
NUMBER_OF_FACS=0
SPEED<-'OFF'
THIGMOTAXIS<-'OFF'
DISTANCE_FROM_SIDES<-'OFF'
TIMESPENT<-'OFF'
TIME_AT_OUTER_PERCENT<-'OFF'
FREEZING<-'OFF'
FLOATING<-'OFF'
LEAPING<-'OFF'
ERRATIC<-'OFF'
THRASHING<-'OFF'
CUSTOM<-'OFF'
IID<-'OFF'
VIID<-'OFF'
NND<-'OFF'
ADVANCED<-'OFF'
DETAILS<-'OFF'
EXCEL<-'OFF'
FOLDER_URL = dir()
NUM_FISH = 1
NUM_BINS = 1
TIME_OF_BINS = 600
SPECIFIC_BIN_START_TIME = 'NONE'  #deactivate for now...
SPECIFIC_BIN_END_TIME = 'NONE'    #deactivate for now...
SMOOTH='OFF'
OCCLUSIONS='OFF'
dir=paste(program_directory,"\\files\\ML Files\\Testing Set",sep='')
setwd(dir)
source(paste(program_directory,"\\scripts\\fish analyzer program.txt",sep=''))

loglist2<-list.files(paste(program_directory,"\\files\\ML Files\\Event Logs Testing\\",sep=''))

behavedata<-list()
length(behavedata)<-length(BEHAVIORLIST)

numtrials<-length(loglist2)

i=1
for(file in loglist2)
{testy<-read.xlsx(paste(paste(program_directory,"\\files\\ML Files\\Event Logs Testing\\",sep=''),file,sep=''),1)
datatable<-testy[,c(8,9,12,13)]
rmdatatable<-datatable[datatable[,4]=='State start',]
rmdatatable<-rmdatatable[rmdatatable[,3] %in% BEHAVIORLIST,]
for (j in 1:length(behavedata))
{behavedata[[j]][[i]]<-rmdatatable[rmdatatable [,3]==BEHAVIORLIST[j],]}
i=i+1}

numtrials<-length(loglist2)
#assumes 1 timebin for each trial when processing
vals<-list()
length(vals)<-length(BEHAVIORLIST)

#First isolate times in trials where behaviors occured

for (j in 1:length(BEHAVIORLIST))
{for (i in 1:numtrials)
{fishdata<-db[[i]][[1]]
vals[[j]][[i]]<-cbind(as.numeric(behavedata[[j]][[i]] [[1]]),as.numeric(behavedata[[j]][[i]][[1]])+as.numeric (behavedata[[j]][[i]][[2]]))}}

trials<-list()
length(trials)<-numtrials
for (i in 1:numtrials)
{for (j in 1:length(BEHAVIORLIST))
{trials[[i]]<-rbind(trials[[i]],cbind(vals[[j]] [[i]],BEHAVIORLIST[j]))}}

for (i in 1:numtrials)
{ord=order(as.numeric(trials[[i]][,1]))
trials[[i]]<-trials[[i]][ord,]
trials[[i]][,1]<-round(as.numeric(trials[[i]][,2]),1)}


for (i in 1:numtrials)
{lst<-c(10*as.numeric(trials[[i]][1,1]),(10*diff(as.numeric (trials[[i]][,1]))))
trials[[i]]<-rep(trials[[i]][,3],round(lst))}

windowfeatures<-c()

GetFeatures<-function(insts)
{newdata<-c() #extract additional features to analyze
for (i in c(2,3,6,7,8,9))
{
datavec<-c()
means<-mean(insts[,i])
vars<-var(insts[,i])
meds<-median(insts[,i])
mins<-min(insts[,i])
maxs<-max(insts[,i])
interev<-mean(insts[20:30,i]-mean(insts[1:10,i]))
binvals<-(maxs-mins)/4
bin1<-sum(insts[,i]<(mins+binvals))/length(insts[,i])
bin2<-(sum((mins+binvals)<insts[,i] & insts[,i]<(mins +2*binvals)))/length(insts[,i])
bin3<-(sum((mins+2*binvals)<insts[,i] & insts[,i]<(mins +3*binvals)))/length(insts[,i])
bin4<-(sum((mins+3*binvals)<insts[,i] & insts[,i]<(mins +4*binvals)))/length(insts[,i])
datavec<-c (means,vars,meds,mins,maxs,interev,bin1,bin2,bin3,bin4)
newdata<-c(newdata,datavec,insts[,i])
}
return(newdata)}

for (i in 1:numtrials)
{for (j in seq(1,(length(trials[[i]])-30),30))
{index<-j
index2<-min(length(db[[i]][[1]][,1]),(j+30))
if (index2-index < 28)
{index = index2-30}
if (all( trials[[i]][[j]] %in% 
trials[[i]][index:index2]))
{feat<-GetFeatures(db[[i]][[1]][index:index2,])
feat<-c(feat,trials[[i]][[j]])
windowfeatures<-rbind(windowfeatures,feat)}
}}

windowfeaturesmod<-matrix(,length(windowfeatures[,1]),(length (windowfeatures[1,])-1))
for (i in seq(1,(length(windowfeatures[1,])-1)))
{windowfeaturesmod[,i]<-scale(as.numeric(windowfeatures[,i]))}

#Use PCA from before to reduce the dimension!
testset<-windowfeaturesmod %*% res$rotation[,1:pc.use]

#Dont forget to re add the labels!
labels2<-windowfeatures[,length(windowfeatures[1,])]